Comparable Interface

A comparable object is capable of comparing itself with another object. 
The class itself must implements the java.lang.Comparable interface to compare its instances.
If any class implements Comparable interface in Java then collection of that object either List or Array 
can be sorted automatically by using Collections.sort() or Arrays.sort() method and objects 
will be sorted based on there natural order defined by CompareTo method.
Comparable is meant for objects with natural ordering which means the object itself must know how it is to be ordered. 
For example Roll Numbers of students.

Comparator

Unlike Comparable, Comparator is external to the element type we are comparing. Itâ€™s a separate class. 
We create multiple separate classes (that implement Comparator) to compare by different members.
Collections class has a second sort() method and it takes Comparator. 
The sort() method invokes the compare() to sort objects.
Comparator interface sorting is done through a separate class.


Note:
To summarize, if sorting of objects needs to be based on natural order then use Comparable 
whereas if you sorting needs to be done on attributes of different objects, then use Comparator in Java.
